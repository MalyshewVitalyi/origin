#include <iostream>
#include <string>
#include<Windows.h>

    class Figure 
    {
    protected:
        int sides_count;
        std::string name;
    public:
        Figure(int sides) : sides_count(sides), name("Фигура") {}

        int get_sides_count() 
        {
            return sides_count;
        }

        std::string get_name() 
        {
            return name;
        }
    };

    class Triangle : public Figure 
    {
    public:
        Triangle() : Figure(3) 
        {
            name = "Треугольник";
        }
    };

    class Quadrangle : public Figure 
    {
    public:
        Quadrangle() : Figure(4) 
        {
            name = "Четырёхугольник";
        }
    };

    int main(int argc, char** argv)
    {

        setlocale(LC_ALL, "rus");

        SetConsoleCP(1251);
        {
            Figure figure(0);
            Triangle triangle;
            Quadrangle quadrangle;

            std::cout << "Количество сторон:" << std::endl;
            std::cout << figure.get_name() << " : " << figure.get_sides_count() << std::endl;
            std::cout << triangle.get_name() << " : " << triangle.get_sides_count() << std::endl;
            std::cout << quadrangle.get_name() << " : " << quadrangle.get_sides_count() << std::endl;

            return 0;
        }
    }







/*В этом задании вы построите первую простую иерархию классов для заданной предметной области.

Предметная область выглядит следующим образом: есть сущность фигуры. Фигуры бывают двух типов: треугольник и четырехугольник. 
У фигуры есть количество сторон. Для неизвестных цифр мы посчитаем это количество равным нулю. 
У треугольника три стороны, у четырёхугольника четыре стороны. 
Для любой фигуры, которую мы хотим узнать количество сторон, мы не должны иметь возможность изменить количество сторон для заданной фигуры извне.

Задача: спроектировать и реализовать классы, описывающие предметную область. 
Продемонстрируйте их работу: создайте по одному экземпляру каждого класса и введите информацию о количестве его сторон на консоли.

Пример работы программы
Консоль
Количество сторон:
Фигура: 0
Треугольник: 3
Четырёхугольник: 4

Вам нужно создать три класса: фигуры, треугольник и четырехугольник. Назовём их Figure, Triangle и Quadrangle.

Классы Triangle и Quadrangle будут соблюдать класс Figure.

Для хранения информации о количестве сторон создайте поле sides_count в классе Figure. 
Оно будет защищённым, чтобы нельзя было изменить его извне, но можно изменить значение в наследниках. 
Либо может быть частным, и тогда вам нужно передать информацию о количестве сторон через конструктор.

Для доступа к информации о большом количестве сторон создайте публичный метод get_sides_count в классе Figure. 
Он будет унаследован от обоев с фигурками.

Для логического определения информации о количестве сторон создайте конструкторы в классах, 
в которых присвойте необходимое значение поля sides_count. Если вы сделали sides_count защищённым, можете присвоить значение прямо в конструкторе.
Если приватным, то нужно создать в классе Figure защищённый конструктор с параметром (количество сторон) и публичный конструктор 
без параметров, который будет включать свой защищённый конструктор с параметром. 
Защищенный конструктор должен быть включен в дочерние классы в своих общедоступных конструкторах без параметров.

Также для удобства вывода названия фигуры можно создать защищённое поле name в классе
Figure соответствующим методом get_name и заполнением значений в каждом классе. В Figure этом будет «Фигура» и т. д. д.*/