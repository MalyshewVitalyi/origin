#include <iostream>
#include <string>
#include<Windows.h>


class Counter                                    //класс 
{
 private: 
     int value;                            //приватное поле
 public:
    Counter() {value = 1; }               //начальным значением счетчика равное 1 ,конструктор без параметров
    Counter(int initialValue) {value = initialValue;}      //конструктор с параметром

    void increase() {value++;}
    void decrease() { value--;}                                     //публичные методы класса Counter
    void result() {std::cout << value << std::endl;}
};

int main(int argc, char** argv)
{
    setlocale(LC_ALL, "rus");
    SetConsoleCP(1251);

    std::string response;
    std::cout << "Вы хотите указать начальное значение счётчика? Введите да или нет: ";
    std::cin >> response;

    if (response == "да")                  //если 'да' => "Введите начальное значение счётчика: "
    {
        int initialValue;
        std::cout << "Введите начальное значение счётчика: ";
        std::cin >> initialValue;
        Counter counter(initialValue);

        char command;           // Предлагаем пользователю вводить команды пока не введена команда 'x'
        while (true) 
        {
            std::cout << "Введите команду ('+', '-', '=' или 'x'): ";
            std::cin >> command;
            if (command == '+')                   // Увеличиваем значение счетчика
            {
                counter.increase();          
            }
            else if (command == '-')              // Уменьшаем значение счетчика
            {
                counter.decrease();
            }
            else if (command == '=') 
            {
                counter.result();                       // Выводим текущее значение счетчика
            }
            else if (command == 'x') 
            {
                std::cout << "До свидания!";
                break;
            }
        }
    }
    else if (response == "нет")                       //если нет то значение уже равно 1
    {
        Counter counter;
        {
        char command;
        while (true)
          {
            std::cout << " Введите команду ('+', '-', '=' или 'x'): ";
            std::cin >> command;
            if (command == '+')
            {
                counter.increase();
            }
            else if (command == '-') {
                counter.decrease();
            }
            else if (command == '=') {
                counter.result();
            }
            else if (command == 'x') {
                std::cout << " До свидания! ";
                break;
            }
          }
        }
    }
return 0;
}

/*Создайте класс Counter. Класс должен выполнять функцию счётчика, для этого он должен предоставлять:

возможность увеличить своё значение на 1
возможность уменьшить своё значение на 1
возможность посмотреть своё текущее значение
возможность создания экземпляра класса с начальным значением по умолчанию (1)
возможность создания экземпляра класса с инициализирующим начальным значением
Обратите внимание на то, что у внешнего кода не должно быть возможности изменить внутреннее значение счётчика напрямую

Напишите код, демонстрирующий работу класса Counter. Спросите у пользователя, хочет ли он указать начальное значение для счётчика.
Если хочет, дайте ему возможность это сделать. Затем предоставьте пользователю возможность вводить команды:

+: увеличьте счётчик на 1
-: уменьшите счётчик на 1
=: выведите текущее значение счётчика
x: завершите работу программы
Пример работы программы
Консоль
Вы хотите указать начальное значение счётчика? Введите да или нет: да
Введите начальное значение счётчика: 6
Введите команду ('+', '-', '=' или 'x'): +
Введите команду ('+', '-', '=' или 'x'): +
Введите команду ('+', '-', '=' или 'x'): =
8
Введите команду ('+', '-', '=' или 'x'): -
Введите команду ('+', '-', '=' или 'x'): =
7
Введите команду ('+', '-', '=' или 'x'): x
До свидания!

Для хранения внутреннего значения счётчика вам понадобится поле

Для того, чтобы нельзя было изменить значение счётчика напрямую, ваше поле должно быть приватным

Для уменьшения, увеличения и получения значения счётчика вам нужно создать соответствующие публичные методы

Для инициализации счётчика создайте конструкторы - без параметров и с параметром

Для вывода на консоль используйте std::cout

Для ввода с консоли используйте std::cin*/
